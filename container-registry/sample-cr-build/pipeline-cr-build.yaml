---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: cr-build
spec:
  params:
    - name: repository
      description: the git repo
    - name: branch
      description: the branch for the git repo
    - name: path-to-dockerfile
      default: "."
    - name: Repository
      description: The git repo
    - name: apikey
      description: the ibmcloud api key
    - name: registry-namespace
      description: the ibmcloud registry namespace
    - name: cluster
      description: The IBM Cloud Kubernetes cluster name
    - name: registry-region
      description: the ibmcloud registry region
      default: us-south
    - name: clusterRegion
      description: The IBM Cloud Kubernetes cluster region
      default: us-south
    - name: clusterNamespace
      description: The Kubernetes cluster namespace
      default: prod
    - name: image-url
      description: image to scan
    - name: account
      description: account info
    - name: password
      description: password of the account
    - name: app-name
      description: Logical application name for DevOps Insights
    - name: resourcegroup
      description: toolchain resource group
    - name: toolchain-id
      description: |
        Toolchain service instance id.
        Default to the toolchain containing the CD Tekton PipelineRun currently executed
    - name: pipeline-debug
      default: "0"
    - name: apikeyscan
      description: doi plugin
  resources:
    - name: app-image
      type: image
  workspaces:
    - name: pipeline-ws
  tasks:
    - name: task-1-git-clone
      taskRef:
        name: git-clone-repo
      params:
        - name: repository
          value: $(params.repository)
        - name: branch
          value: $(params.branch)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: output
          workspace: pipeline-ws
    - name: publish-buildrecord-task
      runAfter: [task-1-git-clone]
      taskRef:
        name: doi-publish-buildrecord
      params:
        - name: app-name
          value: $(params.app-name)
        - name: git-repository
          value: $(tasks.task-1-git-clone.results.git-repository)
        - name: git-branch
          value: $(tasks.task-1-git-clone.results.git-branch)
        - name: git-commit
          value: $(tasks.task-1-git-clone.results.git-commit)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: apikeyscan
          value: $(params.apikeyscan)
    - name: task-2-maven-build
      runAfter: [task-1-git-clone]
      taskRef:
        name: toolchain-build
      workspaces:
        - name: source
          workspace: pipeline-ws
    - name: task-3-cr-build
      runAfter: [task-2-maven-build]
      taskRef:
        name: icr-cr-build
      params:
        - name: path-to-context
          value: $(params.path-to-dockerfile)
        - name: path-to-dockerfile
          value: $(params.path-to-dockerfile)
        - name: additional-tags
          value: "latest"
        - name: additional-tags-script
          value: |
            # Include the clone task output variables in the environment
            source /artifacts/build.properties
            # The script is providing tag(s) as output
            # But logs can be written as error stderr
            echo "Providing an image tag including git branch and commit" >&2
            # Add a specific tag with branch and commit
            echo "1.0.0-${GIT_BRANCH}-${GIT_COMMIT}"
            # Add a specific tag with cd build number
            echo "1.0.0-${BUILD_NUMBER}"
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: source
          workspace: pipeline-ws
      resources:
        outputs:
          - name: built-image
            resource: app-image
    - name: task-4-va-scan
      taskRef:
        name: icr-check-va-scan
      params:
        - name: scan-report-file1
          value: "app-image-va-report.json"
        # - name: max-iteration
        #   value: '5'
        # - name: sleep-time
        #   value: '3'
        # - name: fail-on-scanned-issues
        #   value: 'false'
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: artifacts
          workspace: pipeline-ws
      resources:
        inputs:
          - name: image
            resource: app-image
            from:
              - task-3-cr-build
    - name: twistlock-scan-task
      taskRef:
        name: scan-task
      params:
        - name: registry-namespace
          value: $(params.registry-namespace)
        - name: registry-region
          value: $(params.registry-region)
        - name: image-url
          value: $(params.image-url)
        - name: account
          value: $(params.account)
        - name: password
          value: $(params.password)
        - name: scan-report-file
          value: app-image-scan-report.json
        - name: apikey
          value: $(params.apikey)
      resources:
        inputs:
          - name: image
            resource: app-image
            from:
              - task-3-cr-build
      workspaces:
      - name: task-pvc
        workspace: pipeline-ws  
    - name: publish-doi-twistlock-scan-record
      runAfter:
        - twistlock-scan-task
      taskRef:
        name: doi-publish-twistlock-scan-record
      params:
        - name: app-name
          value: $(params.app-name)
        - name: file-location
          value: $(tasks.twistlock-scan-task.results.scan-report-file)
        - name: registry-region
          value: $(params.registry-region)
        - name: resourcegroup
          value: $(params.resourcegroup)
        - name: toolchain-id
          value: $(params.toolchain-id)
        - name: Repository
          value: $(params.Repository)
        - name: apikeyscan
          value: $(params.apikeyscan)


      workspaces:
      - name: task-pvc
        workspace: pipeline-ws


